;*=====================================================================*/
;*    .../prgm/project/hop/2.0.x/etc/configure.scm.macosx-bundle       */
;*    -------------------------------------------------------------    */
;*    Author      :  Manuel Serrano                                    */
;*    Creation    :  Fri Feb 18 17:29:47 2000                          */
;*    Last change :  Mon May  4 17:17:25 2009 (serrano)                */
;*    -------------------------------------------------------------    */
;*    HOP configuration (tuned for MacOSX bundle)                      */
;*=====================================================================*/

;*---------------------------------------------------------------------*/
;*    The module                                                       */
;*---------------------------------------------------------------------*/
(module __hop_configure

   (extern (include "macosx_bundle.h")
	   (macro resource-dir-fill!::int (::string ::int) "resourceDirFill"))
   
   (export (hop-configure ::bstring)
	   (hop-name)
           (hop-version)
           (hop-branch)
           (hop-backend)
	   (hop-url)
	   %etc-directory
	   %bin-directory
	   %lib-directory
	   %share-directory
	   %doc-directory
	   %contribs-directory
	   %weblets-directory
	   (inline hop-bin-directory)
	   (inline hop-lib-directory)
	   (inline hop-etc-directory)
	   (inline hop-share-directory)
	   (inline hop-doc-directory)
	   (inline hop-contribs-directory)
           (inline hop-weblets-directory)
           (inline hop-library-path)
           (inline hop-mime-types-file)
	   (inline hop-configure-css-mime-type)
	   (inline hop-runtime-system::pair)
	   (inline hop-runtime-system-files::pair)
	   (inline hop-service-base::bstring)
	   (hop-configure-rc-directory)
	   (hop-configure-var-directory)
	   (hop-configure-cache-directory)
	   (hop-srfis::pair-nil))

   (eval   (export hop-name)
	   (export hop-version)
	   (export hop-branch)
	   (export hop-backend)
	   (export hop-url)
	   (export hop-etc-directory)
	   (export hop-bin-directory)
	   (export hop-lib-directory)
	   (export hop-share-directory)
	   (export hop-doc-directory)
	   (export hop-contribs-directory)
           (export hop-weblets-directory)
           (export hop-library-path)
           (export hop-mime-types-file)
	   (export hop-configure-css-mime-type)
           (export hop-runtime-system)
           (export hop-runtime-system-files)
	   (export hop-service-base)
	   (export hop-configure-rc-directory)
	   (export hop-configure-var-directory)
	   (export hop-configure-cache-directory)
	   (export hop-srfis)))

;*---------------------------------------------------------------------*/
;*    *macosx-bundle-dir* ...                                          */
;*---------------------------------------------------------------------*/
(define *macosx-bundle-dir*
   (let* ((str (make-string 1024))
	  (len (resource-dir-fill! str 1024)))
      (when (<fx len 0)
	 (error "hop configure" "could not get bundle directory" #f))
      (string-shrink! str len)
      ;; resource directory is inside bundle directory.
      (file-name-unix-canonicalize! (dirname str))))

;*---------------------------------------------------------------------*/
;*    hop-configure ...                                                */
;*---------------------------------------------------------------------*/
(define (hop-configure config)
   (case (string->symbol config)
      ((--version)
       (print (hop-version)))
      ((--branch)
       (print (hop-branch)))
      ((--backend)
       (print (hop-backend)))
      ((--etcdir)
       (print (hop-etc-directory)))
      ((--bindir)
       (print (hop-bin-directory)))
      ((--libdir)
       (print (hop-lib-directory)))
      ((--sharedir)
       (print (hop-share-directory)))
      ((--docdir)
       (print (hop-doc-directory)))
      ((--contribsdir)
       (print (hop-contribs-directory)))
      ((--webletsdir)
       (print (hop-weblets-directory)))
      ((--library-path)
       (print (hop-library-path)))
      ((--mimetypes)
       (print (hop-mime-types-file)))
      ((--css-mime-type)
       (print (hop-configure-css-mime-type)))
      ((--url)
       (print (hop-url)))
      ((--hop-runtime-system)
       (print (hop-runtime-system)))
      ((--hop-runtime-system-files)
       (print (hop-runtime-system-files)))
      ((--hop-service-base)
       (print (hop-service-base)))
      (else
       (with-output-to-port (current-error-port)
	  (lambda ()
	     (print "usage: hop --configure [OPTION]")
	     (newline)
	     (print "Option:")
	     (print "  [--version]")
	     (print "  [--branch]")
	     (print "  [--backend]")
	     (print "  [--etcdir]")
	     (print "  [--bindir]")
	     (print "  [--libdir]")
	     (print "  [--sharedir]")
	     (print "  [--docdir]")
	     (print "  [--contribsdir]")
             (print "  [--webletsdir]")
	     (print "  [--library-path]")
             (print "  [--mimetypes]")
             (print "  [--javascript-mime-type]")
             (print "  [--css-mime-type]")
	     (print "  [--url]"))))))
	     
;*---------------------------------------------------------------------*/
;*    Name and version                                                 */
;*---------------------------------------------------------------------*/
(define (hop-name) "Hop")
(define (hop-version) "@VERSION@")
(define (hop-branch) "@BRANCH@")
(define (hop-backend) "@BACKEND@")
(define (hop-url) "@URL@")

;*---------------------------------------------------------------------*/
;*    Install directories ...                                          */
;*---------------------------------------------------------------------*/
(define %etc-directory
   (make-file-path *macosx-bundle-dir* "@ETCDIR@"))
(define %bin-directory
   (make-file-path *macosx-bundle-dir* "@BINDIR@"))
(define %lib-directory
   (make-file-path *macosx-bundle-dir* "@LIBDIR@"))
(define %share-directory
   (make-file-path *macosx-bundle-dir* "@SHAREDIR@"))
(define %doc-directory
   (make-file-path *macosx-bundle-dir* "@DOCDIR@"))
(define %contribs-directory
   (make-file-path *macosx-bundle-dir* "@CONTRIBSDIR@"))
(define %weblets-directory
   (make-file-path *macosx-bundle-dir* "@WEBLETSDIR@"))

(define-inline (hop-etc-directory) %etc-directory)
(define-inline (hop-bin-directory) %bin-directory)
(define-inline (hop-lib-directory) %lib-directory)
(define-inline (hop-share-directory) %share-directory)
(define-inline (hop-doc-directory) %doc-directory)
(define-inline (hop-contribs-directory) %contribs-directory)
(define-inline (hop-weblets-directory) %weblets-directory)

;*---------------------------------------------------------------------*/
;*    hop-library-path ...                                             */
;*---------------------------------------------------------------------*/
(define %lib-path
   (make-file-path *macosx-bundle-dir* "Frameworks" "bigloo" "@BIGLOOVERSION@"))

(define-inline (hop-library-path)
   (cons %lib-path (bigloo-library-path)))

;*---------------------------------------------------------------------*/
;*    Misc ...                                                         */
;*---------------------------------------------------------------------*/
(define-inline (hop-mime-types-file) "@MIMETYPES@")
(define-inline (hop-configure-css-mime-type) "@CSSMIMETYPE@")

;*---------------------------------------------------------------------*/
;*    hop-runtime-system ...                                           */
;*---------------------------------------------------------------------*/
(define-inline (hop-runtime-system) '(@HOPJS@))
(define-inline (hop-runtime-system-files) '(@HOPJSFILES@))

;*---------------------------------------------------------------------*/
;*    hop-service-base ...                                             */
;*    -------------------------------------------------------------    */
;*    The prefix of all HOP weblets.                                   */
;*---------------------------------------------------------------------*/
(define-inline (hop-service-base) "@HOPSERVICEBASE@")

;*---------------------------------------------------------------------*/
;*    hop-configure-rc-directory ...                                   */
;*---------------------------------------------------------------------*/
(define (hop-configure-rc-directory) "Library/Preferences/hop")

;*---------------------------------------------------------------------*/
;*    hop-configure-var-directory ...                                  */
;*---------------------------------------------------------------------*/
(define (hop-configure-var-directory) "Library/Application Support/hop")

;*---------------------------------------------------------------------*/
;*    hop-configure-cache-directory ...                                */
;*---------------------------------------------------------------------*/
(define (hop-configure-cache-directory) "Library/Caches/hop")

;*---------------------------------------------------------------------*/
;*    hop-srfis ...                                                    */
;*---------------------------------------------------------------------*/
(define (hop-srfis) 
   (list-copy '(@HOPSRFIS@ hop-@BRANCH@ hop-@VERSION@)))
